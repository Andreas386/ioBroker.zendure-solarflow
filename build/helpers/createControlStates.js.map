{
  "version": 3,
  "sources": ["../../src/helpers/createControlStates.ts"],
  "sourcesContent": ["/* eslint-disable @typescript-eslint/indent */\r\n\r\nimport { ZendureSolarflow } from \"../main\";\r\n\r\nexport const createControlStates = async (\r\n  adapter: ZendureSolarflow,\r\n  productKey: string,\r\n  deviceKey: string,\r\n): Promise<void> => {\r\n  // Create control folder\r\n  await adapter?.extendObjectAsync(`${productKey}.${deviceKey}.control`, {\r\n    type: \"channel\",\r\n    common: {\r\n      name: {\r\n        de: \"Steuerung f\u00FCr Ger\u00E4t \" + deviceKey,\r\n        en: \"Control for device \" + deviceKey,\r\n      },\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  // State zum Setzen des Output Limit\r\n  await adapter?.extendObjectAsync(\r\n    `${productKey}.${deviceKey}.control.setOutputLimit`,\r\n    {\r\n      type: \"state\",\r\n      common: {\r\n        name: {\r\n          de: \"Einzustellende Ausgangsleistung\",\r\n          en: \"Control of the output limit\",\r\n        },\r\n        type: \"number\",\r\n        desc: \"setOutputLimit\",\r\n        role: \"value.power\",\r\n        read: true,\r\n        write: true,\r\n        min: 0,\r\n        unit: \"W\",\r\n      },\r\n      native: {},\r\n    },\r\n  );\r\n\r\n  // State zum Setzen des Charge Limit\r\n  await adapter?.extendObjectAsync(\r\n    `${productKey}.${deviceKey}.control.chargeLimit`,\r\n    {\r\n      type: \"state\",\r\n      common: {\r\n        name: {\r\n          de: \"Setzen des Lade-Limits\",\r\n          en: \"Control of the charge limit\",\r\n        },\r\n        type: \"number\",\r\n        desc: \"chargeLimit\",\r\n        role: \"value.battery\",\r\n        read: true,\r\n        write: true,\r\n        min: 40,\r\n        max: 100,\r\n        unit: \"%\",\r\n      },\r\n      native: {},\r\n    },\r\n  );\r\n\r\n  // State zum Setzen des Discharge Limit\r\n  await adapter?.extendObjectAsync(\r\n    `${productKey}.${deviceKey}.control.dischargeLimit`,\r\n    {\r\n      type: \"state\",\r\n      common: {\r\n        name: {\r\n          de: \"Setzen des Entlade-Limits\",\r\n          en: \"Control of the discharge limit\",\r\n        },\r\n        type: \"number\",\r\n        desc: \"dischargeLimit\",\r\n        role: \"value.battery\",\r\n        read: true,\r\n        write: true,\r\n        min: 0,\r\n        max: 90,\r\n        unit: \"%\",\r\n      },\r\n      native: {},\r\n    },\r\n  );\r\n\r\n  // State zum Setzen des Buzzers\r\n  await adapter?.extendObjectAsync(\r\n    `${productKey}.${deviceKey}.control.buzzerSwitch`,\r\n    {\r\n      type: \"state\",\r\n      common: {\r\n        name: {\r\n          de: \"Sounds am HUB aktivieren\",\r\n          en: \"Enable buzzer on HUB\",\r\n        },\r\n        type: \"boolean\",\r\n        desc: \"buzzerSwitch\",\r\n        role: \"switch\",\r\n        read: true,\r\n        write: true,\r\n      },\r\n      native: {},\r\n    },\r\n  );\r\n\r\n  // State zum Setzen des Buzzers\r\n  await adapter?.extendObjectAsync(\r\n    `${productKey}.${deviceKey}.control.passMode`,\r\n    {\r\n      type: \"state\",\r\n      common: {\r\n        name: {\r\n          de: \"Einstellung des Bypass Modus\",\r\n          en: \"Setting of bypass mode\",\r\n        },\r\n        type: \"number\",\r\n        desc: \"passMode\",\r\n        role: \"switch\",\r\n        read: true,\r\n        write: true,\r\n        states: {\r\n          0: \"Automatic\",\r\n          1: \"Always off\",\r\n          2: \"Always on\",\r\n        },\r\n      },\r\n      native: {},\r\n    },\r\n  );\r\n\r\n  // State zum Setzen des Auto-Modus vom Bypass\r\n  await adapter?.extendObjectAsync(\r\n    `${productKey}.${deviceKey}.control.autoRecover`,\r\n    {\r\n      type: \"state\",\r\n      common: {\r\n        name: {\r\n          de: \"Am n\u00E4chsten Tag Bypass auf Automatik\",\r\n          en: \"Automatic recovery of bypass\",\r\n        },\r\n        type: \"boolean\",\r\n        desc: \"autoRecover\",\r\n        role: \"switch\",\r\n        read: true,\r\n        write: true,\r\n      },\r\n      native: {},\r\n    },\r\n  );\r\n\r\n  if (adapter.config.useLowVoltageBlock) {\r\n    // State zum Setzen des Output Limit\r\n    await adapter?.extendObjectAsync(\r\n      `${productKey}.${deviceKey}.control.lowVoltageBlock`,\r\n      {\r\n        type: \"state\",\r\n        common: {\r\n          name: {\r\n            de: \"Niedrige Batteriespannung erkannt\",\r\n            en: \"Low Voltage on battery detected\",\r\n          },\r\n          type: \"boolean\",\r\n          desc: \"lowVoltageBlock\",\r\n          role: \"indicator.lowbat\",\r\n          read: true,\r\n          write: false,\r\n        },\r\n        native: {},\r\n      },\r\n    );\r\n\r\n    adapter?.subscribeStates(\r\n      `${productKey}.${deviceKey}.control.lowVoltageBlock`,\r\n    );\r\n  }\r\n\r\n  // Subcribe to control states\r\n  adapter?.subscribeStates(`${productKey}.${deviceKey}.control.setOutputLimit`);\r\n\r\n  adapter?.subscribeStates(`${productKey}.${deviceKey}.control.chargeLimit`);\r\n\r\n  adapter?.subscribeStates(`${productKey}.${deviceKey}.control.dischargeLimit`);\r\n\r\n  adapter?.subscribeStates(`${productKey}.${deviceKey}.control.buzzerSwitch`);\r\n\r\n  adapter?.subscribeStates(`${productKey}.${deviceKey}.control.autoRecover`);\r\n\r\n  adapter?.subscribeStates(`${productKey}.${deviceKey}.control.passMode`);\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
