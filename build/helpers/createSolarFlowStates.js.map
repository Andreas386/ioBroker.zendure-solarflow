{
  "version": 3,
  "sources": ["../../src/helpers/createSolarFlowStates.ts"],
  "sourcesContent": ["/* eslint-disable @typescript-eslint/indent */\r\n\r\nimport { ZendureSolarflow } from \"../main\";\r\nimport { ISolarFlowDeviceDetails } from \"../models/ISolarFlowDeviceDetails\";\r\nimport { updateSolarFlowState } from \"../services/adapterService\";\r\nimport { createCalculationStates } from \"./createCalculationStates\";\r\nimport { createControlStates } from \"./createControlStates\";\r\n//import { deleteCalculationStates } from \"./deleteCalculationStates\";\r\n\r\nexport const createSolarFlowStates = async (\r\n  adapter: ZendureSolarflow,\r\n  device: ISolarFlowDeviceDetails,\r\n  type: string\r\n): Promise<void> => {\r\n  const productKey = device.productKey.replace(adapter.FORBIDDEN_CHARS, \"\");\r\n  const deviceKey = device.deviceKey.replace(adapter.FORBIDDEN_CHARS, \"\");\r\n\r\n  adapter.log.debug(\r\n    `[createSolarFlowStates] Creating or updating SolarFlow states for productKey ${productKey} and deviceKey ${deviceKey}.`\r\n  );\r\n\r\n  // Create device (e.g. the product type -> SolarFlow)\r\n  await adapter?.extendObject(productKey, {\r\n    type: \"device\",\r\n    common: {\r\n      name: { de: \"Produkt \" + productKey, en: \"Product \" + productKey },\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  // Create channel (e.g. the device specific key)\r\n  await adapter?.extendObject(productKey + \".\" + deviceKey, {\r\n    type: \"channel\",\r\n    common: {\r\n      name: { de: \"Device Key \" + deviceKey, en: \"Device Key \" + deviceKey },\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  // Create calculations folder\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.calculations`, {\r\n    type: \"channel\",\r\n    common: {\r\n      name: {\r\n        de: \"Berechnungen f\u00FCr Ger\u00E4t \" + deviceKey,\r\n        en: \"Calculations for Device \" + deviceKey,\r\n      },\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  // Create pack data folder\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.packData`, {\r\n    type: \"channel\",\r\n    common: {\r\n      name: {\r\n        de: \"Batterie Packs\",\r\n        en: \"Battery packs\",\r\n      },\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.lastUpdate`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: { de: \"Letztes Update\", en: \"Last Update\" },\r\n      type: \"number\",\r\n      desc: \"lastUpdate\",\r\n      role: \"value.time\",\r\n      read: true,\r\n      write: false,\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.buzzerSwitch`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: {\r\n        de: \"Sounds am HUB aktivieren\",\r\n        en: \"Enable buzzer on HUB\",\r\n      },\r\n      type: \"boolean\",\r\n      desc: \"buzzerSwitch\",\r\n      role: \"value\",\r\n      read: true,\r\n      write: false,\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.packState`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: { de: \"Systemstatus\", en: \"Status of system\" },\r\n      type: \"string\",\r\n      desc: \"packState\",\r\n      role: \"value\",\r\n      read: true,\r\n      write: false,\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.electricLevel`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: { de: \"SOC Gesamtsystem\", en: \"SOC of the system\" },\r\n      type: \"number\",\r\n      desc: \"electricLevel\",\r\n      role: \"value.battery\",\r\n      read: true,\r\n      write: false,\r\n      unit: \"%\",\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  // Set sn number from device\r\n  if (device.electricity) {\r\n    await updateSolarFlowState(\r\n      adapter,\r\n      device.productKey,\r\n      device.deviceKey,\r\n      \"electricLevel\",\r\n      device.electricity\r\n    );\r\n  }\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.name`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: { de: \"Name\", en: \"Name\" },\r\n      type: \"string\",\r\n      desc: \"name\",\r\n      role: \"value\",\r\n      read: true,\r\n      write: false,\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.snNumber`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: { de: \"Seriennnummer\", en: \"Serial ID\" },\r\n      type: \"string\",\r\n      desc: \"snNumber\",\r\n      role: \"value\",\r\n      read: true,\r\n      write: false,\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  // Set sn number from device\r\n  if (device.snNumber) {\r\n    await updateSolarFlowState(\r\n      adapter,\r\n      device.productKey,\r\n      device.deviceKey,\r\n      \"snNumber\",\r\n      device.snNumber.toString()\r\n    );\r\n  }\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.productName`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: { de: \"Produkt Name\", en: \"Product name\" },\r\n      type: \"string\",\r\n      desc: \"productName\",\r\n      role: \"value\",\r\n      read: true,\r\n      write: false,\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  // Set product name from device\r\n  await updateSolarFlowState(\r\n    adapter,\r\n    device.productKey,\r\n    device.deviceKey,\r\n    \"productName\",\r\n    device.productName\r\n  );\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.registeredServer`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: { de: \"Registrierter Server\", en: \"Registered server\" },\r\n      type: \"string\",\r\n      desc: \"registeredServer\",\r\n      role: \"value\",\r\n      read: true,\r\n      write: false,\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.energyPower`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: { de: \"Leistung am Smartmeter\", en: \"Smartmeter energy power\" },\r\n      type: \"number\",\r\n      desc: \"energyPower\",\r\n      role: \"value.power\",\r\n      read: true,\r\n      write: false,\r\n      unit: \"W\",\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.outputPackPower`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: { de: \"Ladeleistung zur Batterie\", en: \"charge power\" },\r\n      type: \"number\",\r\n      desc: \"outputPackPower\",\r\n      role: \"value.power\",\r\n      read: true,\r\n      write: false,\r\n      unit: \"W\",\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.packInputPower`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: { de: \"Entladeleistung aus Batterie\", en: \"discharge power\" },\r\n      type: \"number\",\r\n      desc: \"packInputPower\",\r\n      role: \"value.power\",\r\n      read: true,\r\n      write: false,\r\n      unit: \"W\",\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.solarInputPower`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: { de: \"Leistung der Solarmodule\", en: \"solar power\" },\r\n      type: \"number\",\r\n      desc: \"solarInputPower\",\r\n      role: \"value.power\",\r\n      read: true,\r\n      write: false,\r\n      unit: \"W\",\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.pvPower1`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: { de: \"Leistung PV 1\", en: \"solar power channel 1\" },\r\n      type: \"number\",\r\n      desc: \"pvPower1\",\r\n      role: \"value.power\",\r\n      read: true,\r\n      write: false,\r\n      unit: \"W\",\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.pvPower2`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: { de: \"Leistung PV 2\", en: \"solar power channel 2\" },\r\n      type: \"number\",\r\n      desc: \"pvPower2\",\r\n      role: \"value.power\",\r\n      read: true,\r\n      write: false,\r\n      unit: \"W\",\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.remainInputTime`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: { de: \"Erwartete Ladedauer\", en: \"remaining charge time\" },\r\n      type: \"number\",\r\n      desc: \"remainInputTime\",\r\n      role: \"value.interval\",\r\n      read: true,\r\n      write: false,\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.remainOutTime`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: {\r\n        de: \"Erwartete Entladedauer (Minuten)\",\r\n        en: \"remaining discharge time (minutes)\",\r\n      },\r\n      type: \"number\",\r\n      desc: \"remainOutTime\",\r\n      role: \"value.interval\",\r\n      read: true,\r\n      write: false,\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.socSet`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: { de: \"Max. SOC\", en: \"max. SOC\" },\r\n      type: \"number\",\r\n      desc: \"socSet\",\r\n      role: \"value.battery\",\r\n      read: true,\r\n      write: false,\r\n      unit: \"%\",\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.minSoc`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: { de: \"Min. SOC\", en: \"min. SOC\" },\r\n      type: \"number\",\r\n      desc: \"minSoc\",\r\n      role: \"value.battery\",\r\n      read: true,\r\n      write: false,\r\n      unit: \"%\",\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.inverseMaxPower`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: {\r\n        de: \"Maximal akzeptabler Eingang des PV-Mikrowechselrichters\",\r\n        en: \"highest acceptable input power\",\r\n      },\r\n      type: \"number\",\r\n      desc: \"inverseMaxPower\",\r\n      role: \"value\",\r\n      read: true,\r\n      write: false,\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.wifiState`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: {\r\n        de: \"WiFi Status\",\r\n        en: \"WiFi Status\",\r\n      },\r\n      type: \"string\",\r\n      desc: \"wifiState\",\r\n      role: \"value\",\r\n      read: true,\r\n      write: false,\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  // Set wifi state from device\r\n  await updateSolarFlowState(\r\n    adapter,\r\n    device.productKey,\r\n    device.deviceKey,\r\n    \"wifiState\",\r\n    device.wifiStatus ? \"Connected\" : \"Disconnected\"\r\n  );\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.hubState`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: {\r\n        de: \"Verhalten wenn minimale reservierte Ladung erreicht\",\r\n        en: \"Behavior when minimum reserved charge is reached\",\r\n      },\r\n      type: \"string\",\r\n      desc: \"hubState\",\r\n      role: \"value\",\r\n      read: true,\r\n      write: false,\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.packNum`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: {\r\n        de: \"Anzahl der angeschlossenen Batterien\",\r\n        en: \"Number of batteries\",\r\n      },\r\n      type: \"number\",\r\n      desc: \"packNum\",\r\n      role: \"value\",\r\n      read: true,\r\n      write: false,\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  /* ACE only States */\r\n\r\n  if (type == \"ace\") {\r\n    await adapter?.extendObject(`${productKey}.${deviceKey}.dcOutputPower`, {\r\n      type: \"state\",\r\n      common: {\r\n        name: {\r\n          de: \"Aktuelle DC Ausgangsleistung\",\r\n          en: \"Current DC output power\",\r\n        },\r\n        type: \"number\",\r\n        desc: \"dcOutputPower\",\r\n        role: \"value.power\",\r\n        read: true,\r\n        write: false,\r\n        unit: \"W\",\r\n      },\r\n      native: {},\r\n    });\r\n\r\n    await adapter?.extendObject(`${productKey}.${deviceKey}.dcSwitch`, {\r\n      type: \"state\",\r\n      common: {\r\n        name: {\r\n          de: \"DC Schalter\",\r\n          en: \"DC switch\",\r\n        },\r\n        type: \"boolean\",\r\n        desc: \"dcSwitch\",\r\n        role: \"value\",\r\n        read: true,\r\n        write: false,\r\n      },\r\n      native: {},\r\n    });\r\n  }\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.inputLimit`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: { de: \"Limit der Eingangsleistung\", en: \"limit of input power\" },\r\n      type: \"number\",\r\n      desc: \"inputLimit\",\r\n      role: \"value.power\",\r\n      read: true,\r\n      write: false,\r\n      unit: \"W\",\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.gridPower`, {\r\n    type: \"state\",\r\n    common: {\r\n      name: { de: \"Leistung vom Stromnetz\", en: \"Grid power\" },\r\n      type: \"number\",\r\n      desc: \"gridPower\",\r\n      role: \"value.power\",\r\n      read: true,\r\n      write: false,\r\n      unit: \"W\",\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  /* Solarflow only States */\r\n\r\n  if (type == \"solarflow\") {\r\n    await adapter?.extendObject(`${productKey}.${deviceKey}.pass`, {\r\n      type: \"state\",\r\n      common: {\r\n        name: { de: \"Bypass an/aus\", en: \"Bypass on/off\" },\r\n        type: \"boolean\",\r\n        desc: \"pass\",\r\n        role: \"value\",\r\n        read: true,\r\n        write: false,\r\n      },\r\n      native: {},\r\n    });\r\n\r\n    await adapter?.extendObject(`${productKey}.${deviceKey}.autoRecover`, {\r\n      type: \"state\",\r\n      common: {\r\n        name: {\r\n          de: \"Am n\u00E4chsten Tag Bypass auf Automatik\",\r\n          en: \"Automatic recovery of bypass\",\r\n        },\r\n        type: \"boolean\",\r\n        desc: \"autoRecover\",\r\n        role: \"value\",\r\n        read: true,\r\n        write: false,\r\n      },\r\n      native: {},\r\n    });\r\n  }\r\n\r\n  /* Solarflow and Hyper only States */\r\n\r\n  if (type == \"solarflow\" || type == \"hyper\") {\r\n    await adapter?.extendObject(`${productKey}.${deviceKey}.passMode`, {\r\n      type: \"state\",\r\n      common: {\r\n        name: {\r\n          de: \"Einstellung des Bypass Modus\",\r\n          en: \"Setting of bypass mode\",\r\n        },\r\n        type: \"string\",\r\n        desc: \"passMode\",\r\n        role: \"value\",\r\n        read: true,\r\n        write: false,\r\n      },\r\n      native: {},\r\n    });\r\n\r\n    await adapter?.extendObject(`${productKey}.${deviceKey}.pvBrand`, {\r\n      type: \"state\",\r\n      common: {\r\n        name: { de: \"Wechselrichter Hersteller\", en: \"brand of inverter\" },\r\n        type: \"string\",\r\n        desc: \"pvBrand\",\r\n        role: \"value\",\r\n        read: true,\r\n        write: false,\r\n      },\r\n      native: {},\r\n    });\r\n\r\n    await adapter?.extendObject(`${productKey}.${deviceKey}.outputHomePower`, {\r\n      type: \"state\",\r\n      common: {\r\n        name: { de: \"Ausgangsleistung\", en: \"output power\" },\r\n        type: \"number\",\r\n        desc: \"outputHomePower\",\r\n        role: \"value.power\",\r\n        read: true,\r\n        write: false,\r\n        unit: \"W\",\r\n      },\r\n      native: {},\r\n    });\r\n\r\n    await adapter?.extendObject(`${productKey}.${deviceKey}.outputLimit`, {\r\n      type: \"state\",\r\n      common: {\r\n        name: { de: \"Limit der Ausgangsleistung\", en: \"limit of output power\" },\r\n        type: \"number\",\r\n        desc: \"outputLimit\",\r\n        role: \"value.power\",\r\n        read: true,\r\n        write: false,\r\n        unit: \"W\",\r\n      },\r\n      native: {},\r\n    });\r\n  }\r\n\r\n  if (type == \"ace\" || type == \"hyper\") {\r\n    await adapter?.extendObject(`${productKey}.${deviceKey}.batteryElectric`, {\r\n      type: \"state\",\r\n      common: {\r\n        name: { de: \"Batterie Leistung\", en: \"Battery electric\" },\r\n        type: \"number\",\r\n        desc: \"batteryElectric\",\r\n        role: \"value.power\",\r\n        read: true,\r\n        write: false,\r\n        unit: \"W\",\r\n      },\r\n      native: {},\r\n    });\r\n\r\n    await adapter?.extendObject(`${productKey}.${deviceKey}.gridInputPower`, {\r\n      type: \"state\",\r\n      common: {\r\n        name: {\r\n          de: \"Aktuelle AC Eingangsleistung\",\r\n          en: \"current ac input power\",\r\n        },\r\n        type: \"number\",\r\n        desc: \"gridInputPower\",\r\n        role: \"value.power\",\r\n        read: true,\r\n        write: false,\r\n        unit: \"W\",\r\n      },\r\n      native: {},\r\n    });\r\n\r\n    await adapter?.extendObject(`${productKey}.${deviceKey}.acOutputPower`, {\r\n      type: \"state\",\r\n      common: {\r\n        name: {\r\n          de: \"Aktuelle AC Ausgangsleistung\",\r\n          en: \"Current AC output power\",\r\n        },\r\n        type: \"number\",\r\n        desc: \"acOutputPower\",\r\n        role: \"value.power\",\r\n        read: true,\r\n        write: false,\r\n        unit: \"W\",\r\n      },\r\n      native: {},\r\n    });\r\n\r\n    await adapter?.extendObject(`${productKey}.${deviceKey}.acSwitch`, {\r\n      type: \"state\",\r\n      common: {\r\n        name: {\r\n          de: \"AC Schalter\",\r\n          en: \"AC switch\",\r\n        },\r\n        type: \"boolean\",\r\n        desc: \"acSwitch\",\r\n        role: \"value\",\r\n        read: true,\r\n        write: false,\r\n      },\r\n      native: {},\r\n    });\r\n  }\r\n\r\n  // Create control states only when using App MQTT servers - and not the fallback one!\r\n  if (!adapter.config.useFallbackService) {\r\n    await createControlStates(adapter, productKey, deviceKey, type);\r\n  }\r\n\r\n  if (\r\n    adapter.config.useCalculation &&\r\n    (type == \"solarflow\" || type == \"hyper\")\r\n  ) {\r\n    await createCalculationStates(adapter, productKey, deviceKey);\r\n  } else {\r\n    //await deleteCalculationStates(adapter, productKey, deviceKey);\r\n  }\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
