{
  "version": 3,
  "sources": ["../../src/services/adapterService.ts"],
  "sourcesContent": ["import { ZendureSolarflow } from \"../main\";\r\n\r\n/* eslint-disable @typescript-eslint/indent */\r\nexport const createSolarFlowStates = async (\r\n  adapter: ZendureSolarflow,\r\n  productKey: string,\r\n  deviceKey: string,\r\n) => {\r\n  await adapter?.setObjectNotExistsAsync(\r\n    productKey + \".\" + deviceKey + \".\" + \"electricLevel\",\r\n    {\r\n      type: \"state\",\r\n      common: {\r\n        name: productKey + \".\" + deviceKey + \".\" + \"electricLevel\",\r\n        type: \"number\",\r\n        desc: \"electricLevel\",\r\n        role: \"value.battery\",\r\n        read: true,\r\n        write: true,\r\n        unit: \"%\",\r\n      },\r\n      native: {},\r\n    },\r\n  );\r\n\r\n  await adapter?.setObjectNotExistsAsync(\r\n    productKey + \".\" + deviceKey + \".\" + \"outputHomePower\",\r\n    {\r\n      type: \"state\",\r\n      common: {\r\n        name: productKey + \".\" + deviceKey + \".\" + \"outputHomePower\",\r\n        type: \"number\",\r\n        desc: \"outputHomePower\",\r\n        role: \"value.power\",\r\n        read: true,\r\n        write: true,\r\n        unit: \"W\",\r\n      },\r\n      native: {},\r\n    },\r\n  );\r\n\r\n  await adapter?.setObjectNotExistsAsync(\r\n    productKey + \".\" + deviceKey + \".\" + \"outputLimit\",\r\n    {\r\n      type: \"state\",\r\n      common: {\r\n        name: productKey + \".\" + deviceKey + \".\" + \"outputLimit\",\r\n        type: \"number\",\r\n        desc: \"outputLimit\",\r\n        role: \"value.power\",\r\n        read: true,\r\n        write: true,\r\n        unit: \"W\",\r\n      },\r\n      native: {},\r\n    },\r\n  );\r\n\r\n  await adapter?.setObjectNotExistsAsync(\r\n    productKey + \".\" + deviceKey + \".\" + \"outputPackPower\",\r\n    {\r\n      type: \"state\",\r\n      common: {\r\n        name: productKey + \".\" + deviceKey + \".\" + \"outputPackPower\",\r\n        type: \"number\",\r\n        desc: \"outputPackPower\",\r\n        role: \"value.power\",\r\n        read: true,\r\n        write: true,\r\n        unit: \"W\",\r\n      },\r\n      native: {},\r\n    },\r\n  );\r\n\r\n  await adapter?.setObjectNotExistsAsync(\r\n    productKey + \".\" + deviceKey + \".\" + \"packInputPower\",\r\n    {\r\n      type: \"state\",\r\n      common: {\r\n        name: productKey + \".\" + deviceKey + \".\" + \"packInputPower\",\r\n        type: \"number\",\r\n        desc: \"packInputPower\",\r\n        role: \"value.power\",\r\n        read: true,\r\n        write: true,\r\n        unit: \"W\",\r\n      },\r\n      native: {},\r\n    },\r\n  );\r\n\r\n  await adapter?.setObjectNotExistsAsync(\r\n    productKey + \".\" + deviceKey + \".\" + \"solarInputPower\",\r\n    {\r\n      type: \"state\",\r\n      common: {\r\n        name: productKey + \".\" + deviceKey + \".\" + \"solarInputPower\",\r\n        type: \"number\",\r\n        desc: \"solarInputPower\",\r\n        role: \"value.power.produced\",\r\n        read: true,\r\n        write: true,\r\n        unit: \"W\",\r\n      },\r\n      native: {},\r\n    },\r\n  );\r\n\r\n  await adapter?.setObjectNotExistsAsync(\r\n    productKey + \".\" + deviceKey + \".\" + \"remainInputTime\",\r\n    {\r\n      type: \"state\",\r\n      common: {\r\n        name: productKey + \".\" + deviceKey + \".\" + \"remainInputTime\",\r\n        type: \"number\",\r\n        desc: \"remainInputTime\",\r\n        role: \"value.interval\",\r\n        read: true,\r\n        write: true,\r\n      },\r\n      native: {},\r\n    },\r\n  );\r\n\r\n  await adapter?.setObjectNotExistsAsync(\r\n    productKey + \".\" + deviceKey + \".\" + \"remainOutTime\",\r\n    {\r\n      type: \"state\",\r\n      common: {\r\n        name: productKey + \".\" + deviceKey + \".\" + \"remainOutTime\",\r\n        type: \"number\",\r\n        desc: \"remainOutTime\",\r\n        role: \"value.interval\",\r\n        read: true,\r\n        write: true,\r\n      },\r\n      native: {},\r\n    },\r\n  );\r\n\r\n  await adapter?.setObjectNotExistsAsync(\r\n    productKey + \".\" + deviceKey + \".\" + \"socSet\",\r\n    {\r\n      type: \"state\",\r\n      common: {\r\n        name: productKey + \".\" + deviceKey + \".\" + \"socSet\",\r\n        type: \"number\",\r\n        desc: \"socSet\",\r\n        role: \"value.battery\",\r\n        read: true,\r\n        write: true,\r\n        unit: \"%\",\r\n      },\r\n      native: {},\r\n    },\r\n  );\r\n\r\n  await adapter?.setObjectNotExistsAsync(\r\n    productKey + \".\" + deviceKey + \".\" + \"minSoc\",\r\n    {\r\n      type: \"state\",\r\n      common: {\r\n        name: productKey + \".\" + deviceKey + \".\" + \"minSoc\",\r\n        type: \"number\",\r\n        desc: \"minSoc\",\r\n        role: \"value.battery\",\r\n        read: true,\r\n        write: true,\r\n        unit: \"%\",\r\n      },\r\n      native: {},\r\n    },\r\n  );\r\n\r\n  // State zum Setzen des Output Limit\r\n  await adapter?.setObjectNotExistsAsync(\r\n    productKey + \".\" + deviceKey + \".control.\" + \"setOutputLimit\",\r\n    {\r\n      type: \"state\",\r\n      common: {\r\n        name: productKey + \".\" + deviceKey + \".control.\" + \"setOutputLimit\",\r\n        type: \"number\",\r\n        desc: \"setOutputLimit\",\r\n        role: \"value.power\",\r\n        read: true,\r\n        write: true,\r\n        min: 0,\r\n        unit: \"W\",\r\n      },\r\n      native: {},\r\n    },\r\n  );\r\n\r\n  // // Subscibe to State updates to listen to changes\r\n  adapter?.subscribeStates(\r\n    productKey + \".\" + deviceKey + \".control.\" + \"setOutputLimit\",\r\n  );\r\n};\r\n\r\nexport const updateSolarFlowState = async (\r\n  adapter: ZendureSolarflow,\r\n  productKey: string,\r\n  deviceKey: string,\r\n  state: string,\r\n  val: number | string,\r\n) => {\r\n  //console.log(\"Updating State: \" + productKey + \".\" + deviceKey + \".\" + state + \" with value \" + val);\r\n  adapter?.setStateAsync(\r\n    productKey + \".\" + deviceKey + \".\" + state,\r\n    val,\r\n    false,\r\n  );\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
