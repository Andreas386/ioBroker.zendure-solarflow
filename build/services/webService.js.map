{
  "version": 3,
  "sources": ["../../src/services/webService.ts"],
  "sourcesContent": ["/* eslint-disable @typescript-eslint/indent */\r\nimport { ZendureSolarflow } from \"../main\";\r\nimport axios, { AxiosRequestConfig } from \"axios\";\r\nimport { ISolarFlowDeviceDetails } from \"../models/ISolarFlowDeviceDetails\";\r\n\r\nconst config: AxiosRequestConfig = {\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Accept-Language\": \"de-DE\",\r\n    appVersion: \"4.3.1\",\r\n    \"User-Agent\": \"Zendure/4.3.1 (iPhone; iOS 14.4.2; Scale/3.00)\",\r\n    Accept: \"*/*\",\r\n    Authorization: \"Basic Q29uc3VtZXJBcHA6NX4qUmRuTnJATWg0WjEyMw==\",\r\n    \"Blade-Auth\": \"bearer (null)\",\r\n  },\r\n  timeout: 10000,\r\n};\r\n\r\n/* eslint-disable @typescript-eslint/indent */\r\nexport const login = (adapter: ZendureSolarflow): Promise<string> => {\r\n  if (adapter.accessToken) {\r\n    return new Promise((resolve) => {\r\n      if (adapter.accessToken) {\r\n        resolve(adapter.accessToken);\r\n      }\r\n    });\r\n  }\r\n\r\n  const auth = Buffer.from(\r\n    `${adapter.config.userName}:${adapter.config.password}`,\r\n  ).toString(\"base64\");\r\n\r\n  if (!config || !config.headers) {\r\n    return Promise.reject(\"No axios config!\");\r\n  }\r\n\r\n  config.headers.Authorization = \"Basic \" + auth;\r\n\r\n  const authBody = {\r\n    password: adapter.config.password,\r\n    account: adapter.config.userName,\r\n    appId: \"121c83f761305d6cf7b\",\r\n    appType: \"iOS\",\r\n    grantType: \"password\",\r\n    tenantId: \"\",\r\n  };\r\n\r\n  if (adapter.paths && adapter.paths.solarFlowTokenUrl) {\r\n    return axios\r\n      .post(adapter.paths.solarFlowTokenUrl, authBody, config)\r\n      .then(function (response) {\r\n        if (response.data.success) {\r\n          adapter.log.info(\"[login] Login to Zendure Rest API successful!\");\r\n\r\n          if (response.data?.data?.accessToken) {\r\n            return response.data.data.accessToken;\r\n          }\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        adapter.log.error(error);\r\n        return Promise.reject(\"[login] Failed to login to Zendure REST API!\");\r\n      });\r\n  } else return Promise.reject(\"Path error!\");\r\n};\r\n\r\nexport const getDeviceList = (\r\n  adapter: ZendureSolarflow,\r\n): Promise<ISolarFlowDeviceDetails[]> => {\r\n  adapter.log.debug(\r\n    \"[getDeviceList] Getting device list from Zendure Rest API!\",\r\n  );\r\n\r\n  if (adapter && adapter.paths && adapter.accessToken && config && config.headers) {\r\n    config.headers[\"Blade-Auth\"] = \"bearer \" + adapter.accessToken;\r\n\r\n    const body = {};\r\n\r\n    return axios\r\n      .post(adapter.paths.solarFlowQueryDeviceListUrl, JSON.stringify(body), config)\r\n      .then(function (response) {\r\n        if (response.data.data && response.data.data.length > 0) {\r\n          return response.data.data as ISolarFlowDeviceDetails[];\r\n        } else {\r\n          return [];\r\n        }\r\n      });\r\n  } else {\r\n    adapter.log.error(\"[getDeviceList] No Access Token found!\");\r\n    return Promise.reject(\"No Access Token found!\");\r\n  }\r\n};\r\n\r\n/* export const createDeveloperAccount = (adapter: ZendureSolarflow) => {\r\n  adapter.log.info(\"Function createDeveloperAccount\");\r\n\r\n  adapter.setState(\"errorMessage\", \"\");\r\n\r\n  const body = {\r\n    snNumber: adapter.snNumber,\r\n    account: adapter.config.userName,\r\n  };\r\n\r\n  let paths = undefined;\r\n\r\n  if (adapter.config.server == \"eu\") {\r\n    paths = pathsEu;\r\n  } else {\r\n    paths = pathsGlobal;\r\n  }\r\n\r\n  return axios\r\n    .post(paths.solarFlowDevRegisterUrl, JSON.stringify(body), config)\r\n    .then(function (response) {\r\n      adapter.log.info(\"Successfully created Developer Account!\");\r\n\r\n      if (response.data && response.data.success == true) {\r\n        return response.data.data;\r\n      } else {\r\n        console.warn(\"No Response Data!\");\r\n        return undefined;\r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      adapter.setObjectNotExists(\"errorMessage\", {\r\n        type: \"state\",\r\n        common: {\r\n          name: \"errorMessage\",\r\n          type: \"string\",\r\n          role: \"indicator\",\r\n          read: true,\r\n          write: true,\r\n        },\r\n        native: {},\r\n      });\r\n      adapter.setState(\r\n        \"errorMessage\",\r\n        error.response?.data?.code + \" - \" + error.response.data.msg,\r\n      );\r\n\r\n      if (error.response?.data?.code && error.response?.data?.msg) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        adapter.log.error(\r\n          \"Failed to created Zendure Developer Account: \" +\r\n            error.response?.data?.code +\r\n            \" - \" +\r\n            error.response.data.msg,\r\n        );\r\n      }\r\n\r\n      return Promise.reject(\"Failed to created Zendure Developer Account!\");\r\n    });\r\n};*/\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,mBAA0C;AAG1C,MAAM,SAA6B;AAAA,EACjC,SAAS;AAAA,IACP,gBAAgB;AAAA,IAChB,mBAAmB;AAAA,IACnB,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,QAAQ;AAAA,IACR,eAAe;AAAA,IACf,cAAc;AAAA,EAChB;AAAA,EACA,SAAS;AACX;AAGO,MAAM,QAAQ,CAAC,YAA+C;AACnE,MAAI,QAAQ,aAAa;AACvB,WAAO,IAAI,QAAQ,CAAC,YAAY;AAC9B,UAAI,QAAQ,aAAa;AACvB,gBAAQ,QAAQ,WAAW;AAAA,MAC7B;AAAA,IACF,CAAC;AAAA,EACH;AAEA,QAAM,OAAO,OAAO;AAAA,IAClB,GAAG,QAAQ,OAAO,QAAQ,IAAI,QAAQ,OAAO,QAAQ;AAAA,EACvD,EAAE,SAAS,QAAQ;AAEnB,MAAI,CAAC,UAAU,CAAC,OAAO,SAAS;AAC9B,WAAO,QAAQ,OAAO,kBAAkB;AAAA,EAC1C;AAEA,SAAO,QAAQ,gBAAgB,WAAW;AAE1C,QAAM,WAAW;AAAA,IACf,UAAU,QAAQ,OAAO;AAAA,IACzB,SAAS,QAAQ,OAAO;AAAA,IACxB,OAAO;AAAA,IACP,SAAS;AAAA,IACT,WAAW;AAAA,IACX,UAAU;AAAA,EACZ;AAEA,MAAI,QAAQ,SAAS,QAAQ,MAAM,mBAAmB;AACpD,WAAO,aAAAA,QACJ,KAAK,QAAQ,MAAM,mBAAmB,UAAU,MAAM,EACtD,KAAK,SAAU,UAAU;AAlDhC;AAmDQ,UAAI,SAAS,KAAK,SAAS;AACzB,gBAAQ,IAAI,KAAK,+CAA+C;AAEhE,aAAI,oBAAS,SAAT,mBAAe,SAAf,mBAAqB,aAAa;AACpC,iBAAO,SAAS,KAAK,KAAK;AAAA,QAC5B;AAAA,MACF;AAAA,IACF,CAAC,EACA,MAAM,SAAU,OAAO;AACtB,cAAQ,IAAI,MAAM,KAAK;AACvB,aAAO,QAAQ,OAAO,8CAA8C;AAAA,IACtE,CAAC;AAAA,EACL;AAAO,WAAO,QAAQ,OAAO,aAAa;AAC5C;AAEO,MAAM,gBAAgB,CAC3B,YACuC;AACvC,UAAQ,IAAI;AAAA,IACV;AAAA,EACF;AAEA,MAAI,WAAW,QAAQ,SAAS,QAAQ,eAAe,UAAU,OAAO,SAAS;AAC/E,WAAO,QAAQ,YAAY,IAAI,YAAY,QAAQ;AAEnD,UAAM,OAAO,CAAC;AAEd,WAAO,aAAAA,QACJ,KAAK,QAAQ,MAAM,6BAA6B,KAAK,UAAU,IAAI,GAAG,MAAM,EAC5E,KAAK,SAAU,UAAU;AACxB,UAAI,SAAS,KAAK,QAAQ,SAAS,KAAK,KAAK,SAAS,GAAG;AACvD,eAAO,SAAS,KAAK;AAAA,MACvB,OAAO;AACL,eAAO,CAAC;AAAA,MACV;AAAA,IACF,CAAC;AAAA,EACL,OAAO;AACL,YAAQ,IAAI,MAAM,wCAAwC;AAC1D,WAAO,QAAQ,OAAO,wBAAwB;AAAA,EAChD;AACF;",
  "names": ["axios"]
}
